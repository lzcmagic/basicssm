<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

     <!--自动检测bean.不包括@Controller(交由mvc检测)-->
    <context:component-scan base-package="com.lzc" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <!--&lt;!&ndash; 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 &ndash;&gt;-->
    <!--<cache:annotation-driven cache-manager="scacheManager"/>-->

    <!--&lt;!&ndash;为了区别shiro中引用的id="cacheManager"&ndash;&gt;-->
    <!--<bean id="scacheManager" class="org.springframework.cache.support.SimpleCacheManager">-->
        <!--<property name="caches">-->
            <!--<set>-->
                <!--<bean class="com.lzc.basicssm.cache.RedisCache">-->
                    <!--<property name="redisTemplate" ref="redisTemplate"/>-->
                    <!--<property name="name" value="skyCache"/>-->
                <!--</bean>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->




    <!--&lt;!&ndash; 引入properties配置文件 &ndash;&gt;-->
    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:redis/redis.properties</value>-->
                <!--&lt;!&ndash;要是有多个配置文件，只需在这里继续添加即可 &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
        <!--&lt;!&ndash;<property name="maxActive" value="${redis.maxActive}" />&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="maxWait" value="${redis.maxWait}" />&ndash;&gt;-->
        <!--<property name="maxTotal" value="${redis.maxActive}"/>-->

        <!--<property name="maxWaitMillis" value="${redis.maxWait}"/>-->
        <!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; redis服务器中心 &ndash;&gt;-->
    <!--<bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:host-name="${redis.host}"-->
          <!--p:port="${redis.port}"-->
          <!--p:password="${redis.pass}"-->
          <!--p:pool-config-ref="poolConfig"/>-->

    <!--&lt;!&ndash; redis操作模板，这里采用尽量面向对象的模板 &ndash;&gt;-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="connectionFactory" ref="connectionFactory"/>-->
        <!--&lt;!&ndash;     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！&ndash;&gt;-->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
        <!--</property>-->
        <!--<property name="valueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
        <!--</property>-->
        <!--&lt;!&ndash;开启事务&ndash;&gt;-->
        <!--<property name="enableTransactionSupport" value="true"/>-->
    <!--</bean>-->



    <!--&lt;!&ndash;<bean id="redisTemplete" class="org.springframework.data.redis.core.StringRedisTemplate">&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="connectionFactory" ref="connectionFactory"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->


    <!--&lt;!&ndash; cache配置 &ndash;&gt;-->
    <!--<bean id="redisUtil" class="com.lzc.basicssm.utils.RedisUtil" >-->
        <!--<property name="redisTemplate" ref="redisTemplate" />-->
    <!--</bean >-->

    <!--<bean id="methodCacheInterceptor" class="com.lzc.basicssm.cache.interceptor.MethodCacheInterceptor" >-->
        <!--<property name="redisUtil" ref="redisUtil" />-->
    <!--</bean >-->


</beans>